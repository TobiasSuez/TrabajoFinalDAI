{"ast":null,"code":"export var Event;\n(function (Event) {\n  Event[\"PlayerError\"] = \"player-error\";\n  Event[\"PlaybackState\"] = \"playback-state\";\n  Event[\"PlaybackError\"] = \"playback-error\";\n  Event[\"PlaybackQueueEnded\"] = \"playback-queue-ended\";\n  Event[\"PlaybackTrackChanged\"] = \"playback-track-changed\";\n  Event[\"PlaybackActiveTrackChanged\"] = \"playback-active-track-changed\";\n  Event[\"PlaybackMetadataReceived\"] = \"playback-metadata-received\";\n  Event[\"PlaybackPlayWhenReadyChanged\"] = \"playback-play-when-ready-changed\";\n  Event[\"PlaybackProgressUpdated\"] = \"playback-progress-updated\";\n  Event[\"RemotePlay\"] = \"remote-play\";\n  Event[\"RemotePause\"] = \"remote-pause\";\n  Event[\"RemoteStop\"] = \"remote-stop\";\n  Event[\"RemoteNext\"] = \"remote-next\";\n  Event[\"RemotePrevious\"] = \"remote-previous\";\n  Event[\"RemoteJumpForward\"] = \"remote-jump-forward\";\n  Event[\"RemoteJumpBackward\"] = \"remote-jump-backward\";\n  Event[\"RemoteSeek\"] = \"remote-seek\";\n  Event[\"RemoteSetRating\"] = \"remote-set-rating\";\n  Event[\"RemoteDuck\"] = \"remote-duck\";\n  Event[\"RemoteLike\"] = \"remote-like\";\n  Event[\"RemoteDislike\"] = \"remote-dislike\";\n  Event[\"RemoteBookmark\"] = \"remote-bookmark\";\n  Event[\"RemotePlayId\"] = \"remote-play-id\";\n  Event[\"RemotePlaySearch\"] = \"remote-play-search\";\n  Event[\"RemoteSkip\"] = \"remote-skip\";\n  Event[\"MetadataChapterReceived\"] = \"metadata-chapter-received\";\n  Event[\"MetadataTimedReceived\"] = \"metadata-timed-received\";\n  Event[\"MetadataCommonReceived\"] = \"metadata-common-received\";\n})(Event || (Event = {}));","map":{"version":3,"names":["Event"],"sources":["C:/Users/devandroid/Desktop/TrabajoFinalDAI/node_modules/react-native-track-player/lib/constants/Event.js"],"sourcesContent":["export var Event;\n(function (Event) {\n    Event[\"PlayerError\"] = \"player-error\";\n    /** Fired when the state of the player changes. */\n    Event[\"PlaybackState\"] = \"playback-state\";\n    /** Fired when a playback error occurs. */\n    Event[\"PlaybackError\"] = \"playback-error\";\n    /** Fired after playback has paused due to the queue having reached the end. */\n    Event[\"PlaybackQueueEnded\"] = \"playback-queue-ended\";\n    /**\n     * Fired when another track has become active or when there no longer is an\n     * active track.\n     *\n     * @deprecated use `playback-active-track-changed` instead.\n     **/\n    Event[\"PlaybackTrackChanged\"] = \"playback-track-changed\";\n    /**\n     * Fired when another track has become active or when there no longer is an\n     * active track.\n     **/\n    Event[\"PlaybackActiveTrackChanged\"] = \"playback-active-track-changed\";\n    /**\n     * Fired when the current track receives metadata encoded in. (e.g. ID3 tags,\n     * Icy Metadata, Vorbis Comments or QuickTime metadata).\n     * @deprecated use `AudioChapterMetadataReceived, AudioTimedMetadataReceived, AudioCommonMetadataReceived` instead.\n     **/\n    Event[\"PlaybackMetadataReceived\"] = \"playback-metadata-received\";\n    /**\n     * Fired when playback play when ready has changed.\n     **/\n    Event[\"PlaybackPlayWhenReadyChanged\"] = \"playback-play-when-ready-changed\";\n    /**\n     * Fired when playback progress has been updated.\n     * See https://rntp.dev/docs/api/events#playbackprogressupdated\n     **/\n    Event[\"PlaybackProgressUpdated\"] = \"playback-progress-updated\";\n    /**\n     * Fired when the user presses the play button.\n     * See https://rntp.dev/docs/api/events#remoteplay\n     **/\n    Event[\"RemotePlay\"] = \"remote-play\";\n    /**\n     * Fired when the user presses the pause button.\n     * See https://rntp.dev/docs/api/events#remotepause\n     **/\n    Event[\"RemotePause\"] = \"remote-pause\";\n    /**\n     * Fired when the user presses the stop button.\n     * See https://rntp.dev/docs/api/events#remotestop\n     **/\n    Event[\"RemoteStop\"] = \"remote-stop\";\n    /**\n     * Fired when the user presses the next track button.\n     * See https://rntp.dev/docs/api/events#remotenext\n     **/\n    Event[\"RemoteNext\"] = \"remote-next\";\n    /**\n     * Fired when the user presses the previous track button.\n     * See https://rntp.dev/docs/api/events#remoteprevious\n     **/\n    Event[\"RemotePrevious\"] = \"remote-previous\";\n    /**\n     * Fired when the user presses the jump forward button.\n     * See https://rntp.dev/docs/api/events#remotejumpforward\n     **/\n    Event[\"RemoteJumpForward\"] = \"remote-jump-forward\";\n    /**\n     * Fired when the user presses the jump backward button.\n     * See https://rntp.dev/docs/api/events#remotejumpbackward\n     **/\n    Event[\"RemoteJumpBackward\"] = \"remote-jump-backward\";\n    /**\n     * Fired when the user changes the position of the timeline.\n     * See https://rntp.dev/docs/api/events#remoteseek\n     **/\n    Event[\"RemoteSeek\"] = \"remote-seek\";\n    /**\n     * Fired when the user changes the rating for the track remotely.\n     * See https://rntp.dev/docs/api/events#remotesetrating\n     **/\n    Event[\"RemoteSetRating\"] = \"remote-set-rating\";\n    /**\n     * Fired when the app needs to handle an audio interruption.\n     * See https://rntp.dev/docs/api/events#remoteduck\n     **/\n    Event[\"RemoteDuck\"] = \"remote-duck\";\n    /**\n     * (iOS only) Fired when the user presses the like button in the now playing\n     * center.\n     * See https://rntp.dev/docs/api/events#remotelike-ios-only\n     **/\n    Event[\"RemoteLike\"] = \"remote-like\";\n    /**\n     * (iOS only) Fired when the user presses the dislike button in the now playing\n     * center.\n     * See https://rntp.dev/docs/api/events#remotedislike-ios-only\n     **/\n    Event[\"RemoteDislike\"] = \"remote-dislike\";\n    /** (iOS only) Fired when the user presses the bookmark button in the now\n     * playing center.\n     * See https://rntp.dev/docs/api/events#remotebookmark-ios-only\n     **/\n    Event[\"RemoteBookmark\"] = \"remote-bookmark\";\n    /**\n     * (Android only) Fired when the user selects a track from an external device.\n     * See https://rntp.dev/docs/api/events#remoteplayid\n     **/\n    Event[\"RemotePlayId\"] = \"remote-play-id\";\n    /**\n     * (Android only) Fired when the user searches for a track (usually voice search).\n     * See https://rntp.dev/docs/api/events#remoteplaysearch\n     **/\n    Event[\"RemotePlaySearch\"] = \"remote-play-search\";\n    /**\n     * (Android only) Fired when the user presses the skip button.\n     * See https://rntp.dev/docs/api/events#remoteskip\n     **/\n    Event[\"RemoteSkip\"] = \"remote-skip\";\n    /**\n     * (iOS only) Fired when chapter metadata is received.\n     * See https://rntp.dev/docs/api/events#chaptermetadatareceived\n     **/\n    Event[\"MetadataChapterReceived\"] = \"metadata-chapter-received\";\n    /**\n     * Fired when metadata is received at a specific time in the audio.\n     * See https://rntp.dev/docs/api/events#timedmetadatareceived\n     **/\n    Event[\"MetadataTimedReceived\"] = \"metadata-timed-received\";\n    /**\n     * Fired when common (static) metadata is received.\n     * See https://rntp.dev/docs/api/events#commonmetadatareceived\n     **/\n    Event[\"MetadataCommonReceived\"] = \"metadata-common-received\";\n})(Event || (Event = {}));\n"],"mappings":"AAAA,OAAO,IAAIA,KAAK;AAChB,CAAC,UAAUA,KAAK,EAAE;EACdA,KAAK,CAAC,aAAa,CAAC,GAAG,cAAc;EAErCA,KAAK,CAAC,eAAe,CAAC,GAAG,gBAAgB;EAEzCA,KAAK,CAAC,eAAe,CAAC,GAAG,gBAAgB;EAEzCA,KAAK,CAAC,oBAAoB,CAAC,GAAG,sBAAsB;EAOpDA,KAAK,CAAC,sBAAsB,CAAC,GAAG,wBAAwB;EAKxDA,KAAK,CAAC,4BAA4B,CAAC,GAAG,+BAA+B;EAMrEA,KAAK,CAAC,0BAA0B,CAAC,GAAG,4BAA4B;EAIhEA,KAAK,CAAC,8BAA8B,CAAC,GAAG,kCAAkC;EAK1EA,KAAK,CAAC,yBAAyB,CAAC,GAAG,2BAA2B;EAK9DA,KAAK,CAAC,YAAY,CAAC,GAAG,aAAa;EAKnCA,KAAK,CAAC,aAAa,CAAC,GAAG,cAAc;EAKrCA,KAAK,CAAC,YAAY,CAAC,GAAG,aAAa;EAKnCA,KAAK,CAAC,YAAY,CAAC,GAAG,aAAa;EAKnCA,KAAK,CAAC,gBAAgB,CAAC,GAAG,iBAAiB;EAK3CA,KAAK,CAAC,mBAAmB,CAAC,GAAG,qBAAqB;EAKlDA,KAAK,CAAC,oBAAoB,CAAC,GAAG,sBAAsB;EAKpDA,KAAK,CAAC,YAAY,CAAC,GAAG,aAAa;EAKnCA,KAAK,CAAC,iBAAiB,CAAC,GAAG,mBAAmB;EAK9CA,KAAK,CAAC,YAAY,CAAC,GAAG,aAAa;EAMnCA,KAAK,CAAC,YAAY,CAAC,GAAG,aAAa;EAMnCA,KAAK,CAAC,eAAe,CAAC,GAAG,gBAAgB;EAKzCA,KAAK,CAAC,gBAAgB,CAAC,GAAG,iBAAiB;EAK3CA,KAAK,CAAC,cAAc,CAAC,GAAG,gBAAgB;EAKxCA,KAAK,CAAC,kBAAkB,CAAC,GAAG,oBAAoB;EAKhDA,KAAK,CAAC,YAAY,CAAC,GAAG,aAAa;EAKnCA,KAAK,CAAC,yBAAyB,CAAC,GAAG,2BAA2B;EAK9DA,KAAK,CAAC,uBAAuB,CAAC,GAAG,yBAAyB;EAK1DA,KAAK,CAAC,wBAAwB,CAAC,GAAG,0BAA0B;AAChE,CAAC,EAAEA,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}